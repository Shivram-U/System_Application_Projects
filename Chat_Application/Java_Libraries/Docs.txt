Notes:
    1. to create a Executable .jar File, with a .class files and Library Java classes, in .jar format
        Commands:
            1. to create a .jar File
                $ jar -cvf
                -> With Manifest File
                    $ jar cvfm Executable_JAR_File.jar manifest_file.mf Java_Package_1 Java_Package_2
                    $ jar cvfm Executable_JAR_File.jar META-INF/MANIFEST.MF Java_Package_1 Java_Package_2
                    $ jar cvfm Test1.jar manifest.mf Chat_App_Server Chat_App_Res
                    $ jar cvfm Test1.jar META-INF/MANIFEST.MF Chat_App_Server Chat_App_Res
                -> Without Manifest File
                    $ jar cvfe Executable_JAR_File.jar Entry_Point_Class Java_Package_1 Java_Package_2
                    $ jar cvfe Test2.jar Chat_App_Server.Server Chat_App_Server Chat_App_Res
            2. to include Library .jar files into the Executable .jar file
                -> This can be only done using the MANIFEST FILE.
                Procedure:
                    1.Create a Manifest File with 
                        1. manifest.mf  || META-INF/MANIFEST.MF
                        Content:
                                1|Main-Class: Chat_App_Server.Server
                                2|Class-Path: Java_Libraries/json-simple-1.1.1.jar
                                3|
                    2.jar File Creation
                            $ jar cvfm Test1.jar manifest.mf Chat_App_Server Chat_App_Res
                    3. Library .jar file Inclusion
                        -> Create a Library Directory(Java_Libraries) in the current Project directory
                        -> Include all the Library .jar files in the Library Folder.
                        -> include all the .jar library files, using the following Command.
                            $ jar uf Executable_JAR_File.jar -C Library_Folder Library.jar
                            $ jar uf Test1.jar -C Java_Libraries json-simple-1.1.1.jar
            3. Execution Command:
                $ java -jar Executable_JAR_File.jar

Help:
i try to create a executable .jar file, my java classes have to inlcude another .jar file as library for execution, how to include this library .jar file into the executable .jar file

To include a library .jar file into your executable .jar file, you can use the following steps:

Create a new directory in your project, let's call it lib.

Copy the library .jar file into this directory.

In your Java code, add the library .jar file to your classpath using the Class-Path attribute in the META-INF/MANIFEST.MF file. For example, if your library file is called library.jar, add the following line to the MANIFEST.MF file:

vbnet
Copy code
Class-Path: lib/library.jar
Build your executable .jar file as usual, making sure to include the META-INF/MANIFEST.MF file in the correct location within the .jar file.

When you run your executable .jar file, it should now include the library .jar file in its classpath, allowing your Java code to access the classes in the library.





U.Shivram
can you provide the commands for this
Sure! Here are the steps to create an executable .jar file that includes a library .jar file using the command line:

Create a new directory for your project and navigate into it:

bash
Copy code
mkdir myproject
cd myproject
Create a subdirectory called lib to hold your library .jar file:

arduino
Copy code
mkdir lib
Copy your library .jar file into the lib directory. For example, if your library file is called library.jar, use the following command to copy it into the lib directory:

bash
Copy code
cp /path/to/library.jar lib/
Create a new Java source file called MyMainClass.java and put it in the root of the project directory:

Copy code
vi MyMainClass.java
Add the following code to the MyMainClass.java file:

java
Copy code
public class MyMainClass {
    public static void main(String[] args) {
        // Your code here
    }
}
Compile your Java code and package it into an executable .jar file using the following command:

arduino
Copy code
javac MyMainClass.java
jar cfm myproject.jar META-INF/MANIFEST.MF MyMainClass.class
Create a MANIFEST.MF file in the META-INF directory and add the following line to it:

vbnet
Copy code
Class-Path: lib/library.jar
You can create the MANIFEST.MF file using the following command:

bash
Copy code
echo "Class-Path: lib/library.jar" > META-INF/MANIFEST.MF
Add the library .jar file to your executable .jar file using the following command:

mathematica
Copy code
jar uf myproject.jar -C lib library.jar
Run your executable .jar file:

Copy code
java -jar myproject.jar
That's it! Your Java code should now be able to access the classes in the library .jar file included in your executable .jar file.